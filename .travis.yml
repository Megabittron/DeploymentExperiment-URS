language: java
before_cache:
    - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
    directories:
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/
jdk:
    - openjdk8

sudo: required

env:
    - MONGODB=3.4.7

install:
    - wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${MONGODB}.tgz
    - tar xzf mongodb-linux-x86_64-${MONGODB}.tgz
    - ${PWD}/mongodb-linux-x86_64-${MONGODB}/bin/mongod --version


before_script:
    - mkdir ${PWD}/mongodb-linux-x86_64-${MONGODB}/data
    - ${PWD}/mongodb-linux-x86_64-${MONGODB}/bin/mongod --dbpath ${PWD}/mongodb-linux-x86_64-${MONGODB}/data --logpath ${PWD}/mongodb-linux-x86_64-${MONGODB}/mongodb.log --fork
    - npm install -g @angular/cli

before_deploy:
    - openssl aes-256-cbc -K $encrypted_59e4330f1ef6_key -iv $encrypted_59e4330f1ef6_iv -in deploy_rsa.enc -out deploy_rsa -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./deploy_rsa
    - ssh-add ./deploy_rsa
    - echo -e "Host ${DEPLOY_HOST}\n\tStrictHostKeyChecking no\n" ~/.ssh/config

script:
    - ./gradlew build -x RunClientTests

deploy:
    # deploy develop to the development environment
    - provider: script
      skip_cleanup: true
      script: bash scripts/deploy_dev.sh
      on:
          branch: development
    # deploy master to production
    - provider: script
      skip_cleanup: true
      script: bash scripts/deploy_prod.sh
      on:
          branch: master
    # test
    - provider: script
      skip_cleanup: true
      script: bash scripts/test.sh
      on:
          all_branches: true


